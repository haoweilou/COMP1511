//
// DO NOT CHANGE THIS FILE
//
// You do not submit this file. This file is not marked.
// If you think you need to change this file you have
// misunderstood the assignment - ask in the course forum.
//
// Assignment 2 19T1 COMP1511: Pokedex
// pokedex.h
//
// You must not change this file.
//
// Version 1.0.0: Assignment released.
// Version 1.0.1: Minor clarifications to `get_current_pokemon`.

#include "pokemon.h"

#ifndef _POKEDEX_H_
#define _POKEDEX_H_

typedef struct pokedex *Pokedex;

#define DOES_NOT_EVOLVE (-42)

// Create a new Pokedex and return a pointer to it.
// The pointer is to a malloced piece of memory, and it is the caller's
// responsibility to call 'destroy_pokedex' to free that memory.
Pokedex new_pokedex(void);

////////////////////////////////////////////////////////////////////////
//                         Stage 1 Functions                          //
////////////////////////////////////////////////////////////////////////

// Add a new Pokemon to the Pokedex.
// Note: just adding the Pokemon to the Pokedex does not mean it has
// been 'found'.
//
// When the first Pokemon is added to the PokÃ©dex, the currently
// selected Pokemon becomes this Pokemon.
//
// The currently selected Pokemon remains the first Pokemon that was
// inserted into the Pokedex, until the `change_current_pokemon`,
// `next_pokemon`, or `prev_pokemon` functions are called.
//
// If there is already a Pokemon in the Pokedex with the same pokemon_id
// as this Pokemon, the function should print an appropriate error
// message and exit the program.
void add_pokemon(Pokedex pokedex, Pokemon pokemon);

// Print out the details of the currently selected Pokemon in the form:
//   Id: 007
//   Name: Squirtle
//   Height: 0.51m
//   Weight: 9.0kg
//   Type: Water
//
// If the Pokemon has not been found, the output should be:
//   Id: 007
//   Name: ********
//   Height: --
//   Weight: --
//   Type: --
//
// If the Pokemon has multiple types, they should be separated by a space:
//   Id: 006
//   Name: Charizard
//   Height: 1.7m
//   Weight: 90.5kg
//   Type: Fire Flying
void detail_pokemon(Pokedex pokedex);

// Return the currently selected Pokemon (i.e. the pointer to the
// pokemon struct, which was originally passed in to new_pokemon).
//
// The currently selected Pokemon starts out as the first Pokemon that
// was added to the Pokedex, and can be changed by calling the functions
// you will implement in Stage 2 (e.g. `next_pokemon`).
//
// See the `test_next_pokemon` function in test_pokedex.c for a concrete
// example of this function being used.
//
// If the Pokedex is empty, this function should print an appropriate
// error message and exit the program.
Pokemon get_current_pokemon(Pokedex pokedex);

// Sets the currently selected Pokemon to be 'found'.
//
// (see the assignment spec for more details on what being 'found' means)
//
// If there are no Pokemon in the Pokedex, this function does nothing.
void find_current_pokemon(Pokedex pokedex);

// Print out all of the Pokemon in the Pokedex in this form:
//
// --> #001: Bulbasaur
//     #004: **********
//     #007: ********
//     #010: Caterpie
//     #013: Weedle
//     #016: Pidgey
//
// An arrow should be displayed next to the currently selected Pokemon.
//
// If a pokemon_id has less than three digits, it should be printed with
// leading '0's.
//
// If it has more than three digits, it should be printed as-is.
//
// --> #001: Bulbasaur
//     #004: **********
//     #007: ********
//     #010: Caterpie
//     #013: Weedle
//     #1263: Jabberwocky
//
// Any Pokemon not yet 'found' should have its name replaced with
// asterisks.
//
// The Pokemon should be printed in the order that they were inserted
// into the Pokedex.
void print_pokemon(Pokedex pokedex);

////////////////////////////////////////////////////////////////////////
//                         Stage 2 Functions                          //
////////////////////////////////////////////////////////////////////////

// Change the currently selected Pokemon to be the next in the Pokedex.
//
// If there is no next Pokemon, the current Pokemon is unchanged.
//
// If there are no Pokemon in the Pokedex, this function does nothing.
void next_pokemon(Pokedex pokedex);

// Change the currently selected Pokemon to be the previous in the
// Pokedex.
//
// If there is no previous Pokemon, the current Pokemon is unchanged.
//
// If there are no Pokemon in the Pokedex, this function does nothing.
void prev_pokemon(Pokedex pokedex);

// Change the currently selected Pokemon in the Pokedex to be the
// Pokemon with the ID `pokemon_id`.
//
// If there is no Pokemon with the ID `pokemon_id`, this function does
// nothing.
void change_current_pokemon(Pokedex pokedex, int pokemon_id);

// Remove the currently selected Pokemon from the Pokedex.
//
// When the currently selected Pokemon is removed, the new currently
// selected Pokemon should become the Pokemon that was after the removed
// Pokemon.
//
// If the removed Pokemon was at the end of the Pokedex (i.e. it had no
// Pokemon after it), the new currently selected Pokemon should instead
// become the Pokemon that was before the removed Pokemon.
//
// If the removed Pokemon was the only Pokemon in the Pokedex, the
// currently selected Pokemon should become NULL.
//
// If there are no Pokemon in the Pokedex, this function does nothing.
void remove_pokemon(Pokedex pokedex);

// Destroy a given Pokedex and free all associated memory.
void destroy_pokedex(Pokedex pokedex);

////////////////////////////////////////////////////////////////////////
//                         Stage 3 Functions                          //
////////////////////////////////////////////////////////////////////////

// This function emulates what happens when a player goes out exploring
// and comes across different Pokemon.
//
// When exploring, it is possible for the player to find any of the
// Pokemon that are stored in Pokedex, whether or not that Pokemon has
// been 'found' yet.
//
// To determine which Pokemon the user should find, this function should
// generate a random number between 0 and `factor - 1` (inclusive),
// which represents a pokemon_id.
//
// If there is a Pokemon with that pokemon_id in the Pokedex, the player
// has now 'found' that Pokemon.
//
// If there is no Pokemon with that pokemon_id in the Pokedex, nothing
// is done with that pokemon_id.
//
// This process should be repeated until `how_many` Pokemon have been
// found.
//
// If it is not possible to find any Pokemon with the given parameters
// (e.g. there are no Pokemon in the Pokedex with pokemon_id between 0
// and `factor - 1`), this function should print an appropriate error
// message and exit the program.
//
// The random number generator should be seeded with the provided seed
// `seed` each time this function is called.
void go_exploring(Pokedex pokedex, int seed, int factor, int how_many);

// Return the number of Pokemon in the Pokedex that have been found.
int count_found_pokemon(Pokedex pokedex);

// Return the total number of Pokemon in the Pokedex, whether or not
// they have been found.
int count_total_pokemon(Pokedex pokedex);

////////////////////////////////////////////////////////////////////////
//                         Stage 4 Functions                          //
////////////////////////////////////////////////////////////////////////

// Add the information that the Pokemon with the ID `from_id` can
// evolve into the Pokemon with the ID `to_id`.
//
// See the evolution chart at https://pokemondb.net/pokedex/squirtle for
// more details
//
// For this assignment you can assume that every Pokemon can only evolve
// into one other Pokemon. If the function is called again with the same
// `from_id`, the new `to_id` will override the previous
// evolution information.
//
// For example, if the function was called three times:
//
// evolve_pokemon(pokedex, 0, 1)
// evolve_pokemon(pokedex, 0, 2)
// evolve_pokemon(pokedex, 0, 3)
//
// The end result of the these three function calls would be that
// Pokemon 0 evolves into Pokemon 3 (rather than 1 or 2).
//
// If there is no Pokemon with the ID `from_id` or `to_id`,
// or if the provided `from_id` and `to_id` are the same,
// this function should print an appropriate error message and exit the
// program.
void add_pokemon_evolution(Pokedex pokedex, int from_id, int to_id);

// Show the evolutions of the currently selected Pokemon.
// It should include the Pokemon it evolves into (if any), as well as
// any evolutions that its evolved state can evolve into, and so on.
//
// For example:
//
// #004 Charmander [Fire] --> #005 Charmeleon [Fire] --> #006 Charizard [Fire, Flying]
//
// If any of the Pokemon have not yet been 'found', their types and names
// should be replaced with "????".
//
// For example, if the Pokedex has found Charmander but not Charmeleon
// or Charizard, the output should be:
//
// #004 Charmander [Fire] --> #005 ???? [????] --> #006 ???? [????]
void show_evolutions(Pokedex pokedex);

// Return the pokemon_id of the Pokemon that the currently selected
// Pokemon evolves into.
//
// If the currently selected Pokemon does not evolve, this function
// should return DOES_NOT_EVOLVE.
//
// If the Pokedex is empty, this function should print an appropriate
// error message and exit the program.
int get_next_evolution(Pokedex pokedex);

////////////////////////////////////////////////////////////////////////
//                         Stage 5 Functions                          //
////////////////////////////////////////////////////////////////////////

// Create a new Pokedex which contains only the Pokemon of a specified
// type from the original Pokedex.
//
// If a Pokemon has more than one type, only one of its types has to
// match the given type to be included in the Pokedex.
//
// The Pokemon should appear in this Pokedex in the same order as they
// appeared in the original Pokedex.
//
// If a Pokemon has not yet been found, it should not be added to the
// new Pokedex.
//
// All attributes should be copied except evolution information: the
// copied Pokemon should behave as if they have no evolutions.
//
// The currently selected Pokemon in the new Pokedex should be the
// first Pokemon in the Pokedex.
//
// If there are no matching Pokemon, this function should return an
// empty Pokedex.
//
// This function should not alter the original Pokedex. It should create
// copies of any matching Pokemon in the original Pokedex, and insert
// those copies into the new Pokedex.
Pokedex get_pokemon_of_type(Pokedex pokedex, pokemon_type type);

// Create a new Pokedex which contains only the Pokemon that have
// previously been 'found' from the original Pokedex.
//
// The Pokemon should appear in this Pokedex in ascending order of
// pokemon_id (regardless of the order that they appeared in the
// original Pokedex).
//
// The currently selected Pokemon in the new Pokedex should be the
// first Pokemon in the Pokedex (i.e. the Pokemon with the lowest
// pokemon_id).
//
// If there are no matching Pokemon, this function should return an
// empty Pokedex.
//
// This function should not alter the original Pokedex.  It should
// create copies of any Pokemon which are in the original Pokedex, and
// insert those copies into the new Pokedex.
Pokedex get_found_pokemon(Pokedex pokedex);

// Create a new Pokedex containing only the Pokemon from the original
// Pokedex which have the given string appearing in its name.
// (e.g. if the text provided is 'basau' then 'Bulbasaur' should be one
// of the Pokemon in the returned Pokedex)
//
// The text provided is not case sensitive,  e.g. if the text provided
// is 'bulb', then 'Bulbasaur' should be one of the Pokemon in the
// returned Pokedex.
//
// If a Pokemon has not yet been found, it should not be added to the
// new Pokedex.
//
// The currently selected Pokemon in the new Pokedex should be the
// first Pokemon in the Pokedex.
//
// If there are no matching Pokemon, this function should return an
// empty Pokedex.
//
// This function should not alter the original Pokedex.  It should
// create copies of any Pokemon which are in the original Pokedex, and
// insert those copies into the new Pokedex.
//
// !! You must not call any functions from string.h in this function !!
Pokedex search_pokemon(Pokedex pokedex, char *text);

#endif //  _POKEDEX_H_
